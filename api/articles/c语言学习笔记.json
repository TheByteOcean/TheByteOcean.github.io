{"title":"c语言学习笔记","uid":"bdd0eaab0e705abcb82a7da5e660d5c1","slug":"c语言学习笔记","date":"2022-04-14T13:11:40.000Z","updated":"2022-04-14T13:55:46.594Z","comments":true,"path":"api/articles/c语言学习笔记.json","keywords":null,"cover":"https://s1.ax1x.com/2022/04/14/L1qWgs.jpg","content":"<h1 id=\"C-语言\"><a href=\"#C-语言\" class=\"headerlink\" title=\"C 语言\"></a><strong>C</strong> 语言</h1><h2 id=\"1-数据类型\"><a href=\"#1-数据类型\" class=\"headerlink\" title=\"1.数据类型\"></a>1.数据类型</h2><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">char ：字符数据类型\n\nshort ：短整形\n\nint ：整形\n\nlong ：长整形\n\nlong long ：更长的整形\n\nfloat ：单精度浮点形\n\ndouble ：双精度浮点型</code></pre>\n\n\n\n<h3 id=\"1-1格式输出\"><a href=\"#1-1格式输出\" class=\"headerlink\" title=\"1.1格式输出\"></a>1.1格式输出</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>％d</strong>整型输出，％ld长整型输出，</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> <strong>％o</strong>以八进制数形式输出整数，</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> <strong>％x</strong>以十六进制数形式输出整数，</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>％u</strong>以十进制数输出unsigned型数据(无符号数)。</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> <strong>％c</strong>用来输出一个字符，</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> <strong>％s</strong>用来输出一个字符串，</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> <strong>％f</strong>用来输出实数，以小数形式输出，（备注：浮点数是不能定义如的精度的，所以“%6.2f”这种写法是“错误的”！！！）</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>  <strong>％e</strong>以指数形式输出实数，</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>  <strong>％g</strong>根据大小自动选f格式或e格式，且不输出无意义的零</p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n&#123;\n    char ch &#x3D; &#39;A&#39;;\n\tshort num &#x3D; 10;&#x2F;&#x2F;short int的缩写\n\tint age &#x3D; 5;\n\tlong d &#x3D; 1000;&#x2F;&#x2F;long int的缩写\n\tfloat weight &#x3D; 3.14;\n\tdouble f &#x3D; 3.1415926;\n\tprintf(&quot;%c,%d,%d,%d,%f,%f&quot;,ch,num,age,d,weight,f);\n\tsystem(&quot;pause&quot;);&#x2F;&#x2F;控制台停留\n\treturn 0;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">输出结果：A，10，5，1000，3.14，3.1415926</code></pre>\n\n<h2 id=\"2-局部变量和全局变量\"><a href=\"#2-局部变量和全局变量\" class=\"headerlink\" title=\"2. 局部变量和全局变量\"></a>2. 局部变量和全局变量</h2><h3 id=\"2-1-变量定义：\"><a href=\"#2-1-变量定义：\" class=\"headerlink\" title=\"2.1 变量定义：\"></a>2.1 变量定义：</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>局部变量作用域在局部的变量工程</li>\n<li>全局变量作用域在整个项目工程（如引用同项目不同文件的变量需要使用：<strong>全局变量声明</strong>（extern））</li>\n</ol></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint a&#x3D;100;&#x2F;&#x2F;全局变量\nint main()\n&#123; \n    int a&#x3D;10;&#x2F;&#x2F;局部变量\n    printf(&quot;%d&quot;,a);\n    system(&quot;pause&quot;);&#x2F;&#x2F;控制台停留\n\treturn 0;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">结果是：10</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 当全局变量和局部变量冲突时，优先使用局部变量。</p>\n<p> &#x3D;&#x3D;（不建议局部和全局冲突）&#x3D;&#x3D;</p>\n<p> 局部变量只可以在局部使用，在&#x3D;&#x3D;局外不可以使用。&#x3D;&#x3D;</p></blockquote>\n<p>代码例子</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n&#123; \n    \n    &#123;\n        int a&#x3D;10;&#x2F;&#x2F;局部变量\n    &#125;\n    printf(&quot;%d&quot;,a);\n    system(&quot;pause&quot;);&#x2F;&#x2F;控制台停留\n\treturn 0;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">会提示 a 未定义\n注意：执行类代码必须放在函数里面，不可以放在外面，而全局变量可以放在函数外面；</code></pre>\n\n<h3 id=\"2-2-变量的运算\"><a href=\"#2-2-变量的运算\" class=\"headerlink\" title=\"2.2 变量的运算\"></a><strong>2.2 变量的运算</strong></h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main()\n&#123;\n  int a&#x3D;0,b&#x3D;0;\n    int sum&#x3D;0;\n    scanf(&quot;%d %d&quot;,&amp;a,&amp;b);&#x2F;&#x2F;用VS studio时用scanf_s\n    &#x2F;&#x2F;&amp; ：取地址符, &amp;a：变量a的地址\n    sum &#x3D; a + b;\n    printf(&quot;%d and %d is %d&quot;,a,b,sum);\n    system(&quot;pause&quot;);&#x2F;&#x2F;控制台停留\n\treturn 0;\n&#125;</code></pre>\n\n<h2 id=\"3-常量\"><a href=\"#3-常量\" class=\"headerlink\" title=\"3.常量\"></a>3.常量</h2><h3 id=\"3-1-字面常量：1-2-3-a-b-c-’a’\"><a href=\"#3-1-字面常量：1-2-3-a-b-c-’a’\" class=\"headerlink\" title=\"3.1. 字面常量：1,2,3,a,b,c,’a’\"></a>3.1. 字面常量：<em>1,2,3,a,b,c,’a’</em></h3><h3 id=\"3-2-const修饰的常变量（变量具有常量属性）\"><a href=\"#3-2-const修饰的常变量（变量具有常量属性）\" class=\"headerlink\" title=\"3.2. const修饰的常变量（变量具有常量属性）\"></a>3.2. const修饰的常变量（<em>变量具有常量属性</em>）</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int main()&#123;\n    int a &#x3D; 10;\n    a&#x3D;20;&#x2F;&#x2F;a可以被修改为20\n    printf(&quot;%d&quot;,a)\n&#125;\n结果是 20, a被修改了\nint main()&#123;\n    const int a &#x3D; 10;\n    a&#x3D;20;&#x2F;&#x2F;const指定a为常变量了，a不可以被改了。会被报错。\n    printf(&quot;%d&quot;,a)\n&#125;\n</code></pre>\n\n<p><em>注意：表达式中的只可以用常量，不可以用变量</em></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int main()\n&#123;\n    int arr[2]&#x3D;&#123;1,2&#125;;&#x2F;&#x2F;正确\n    int arr2[n]&#x3D;&#123;0&#125;;&#x2F;&#x2F;错误，因为数组不可以使用常量。\n    printf(&quot;&quot;)\n&#125;\n但是\nint main()\n&#123;\n    const int n &#x3D; 10;\n    int arr2[n]&#x3D;&#123;0&#125;;&#x2F;&#x2F;错误，n虽然被定义为常变量了。但是实质还是变量。\n    printf(&quot;&quot;)\n&#125;\n</code></pre>\n\n<h3 id=\"3-3-define定义的常量\"><a href=\"#3-3-define定义的常量\" class=\"headerlink\" title=\"3.3. define定义的常量\"></a>3.3. define定义的常量</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#define wife 1000&#x2F;&#x2F;定义wife&#x3D;1000\nint main()\n&#123;\n  int a &#x3D; wife;\n  printf(&quot;a &#x3D; %d&quot;,a);\n  system(&quot;pause&quot;);\n&#125;\n输出结果是1000\n</code></pre>\n\n<p>###3.4 枚举常量(enum)、、不是很懂</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nenum sex&#123;\n  male,\n  female\n&#125;;\nint main()&#123;\n  int a,b;\n  a &#x3D; male;\n  b &#x3D; female;\n  printf(&quot;%d\\n%d&quot;,male,female);\n  system(&quot;pause&quot;);\n&#125;\n结果是\n  0\n  1\n</code></pre>\n\n<h2 id=\"4-字符串和转义字符和注释\"><a href=\"#4-字符串和转义字符和注释\" class=\"headerlink\" title=\"4.字符串和转义字符和注释\"></a>4.字符串和转义字符和注释</h2><h3 id=\"4-1-字符串：双引号括起来的一串字符。\"><a href=\"#4-1-字符串：双引号括起来的一串字符。\" class=\"headerlink\" title=\"4.1.字符串：双引号括起来的一串字符。\"></a>4.1.字符串：双引号括起来的一串字符。</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">&quot;hello&quot;就是一个字符串（&quot;实际是hello\\0&quot;，\\0被隐藏了）\n</code></pre>\n\n<p>   <em>注：字符串的结束标志是一个<strong>\\0</strong>的转义字符，在计算字符串长度时，不算作字符串内容。</em></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt;&#x2F;&#x2F;strlen的调用\nint main()\n&#123;\n  int len &#x3D; strlen(&quot;hello&quot;);&#x2F;&#x2F;string length字符串长度\n  printf(&quot;%d&quot;,len);\n  system(&quot;pause&quot;);\n&#125;\n答案是5，\\0不会被计算在内\n</code></pre>\n\n<h3 id=\"4-2-转义字符列表\"><a href=\"#4-2-转义字符列表\" class=\"headerlink\" title=\"4.2.转义字符列表\"></a>4.2.转义字符列表</h3><p><img src=\"/c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.assets/1649584851273.png\" alt=\"1649584851273\"></p>\n<p>代码示例</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt;&#x2F;&#x2F;strlen的调用\nint main()&#123;\n  printf(&quot;%s %s %s&quot;,&quot;\\?&quot;,&quot;\\&quot;&quot;,&quot;\\&#39;&quot;);&#x2F;&#x2F;会输出？ &quot; &#39;\n  printf(&quot;%d&quot;,strlen(&quot;c:\\test\\328\\text.c&quot;));\n &#x2F;&#x2F;strlen是计算字符长度的\n  system(&quot;pause&quot;);\n  return 0;\n&#125;\n答案是14\nc :\\t e s t \\32 8 \\t e x t . c\n共14个&#x2F;328的格式是&#x2F;ddd而不是&#x2F;xhh因为8不是8进制，8进制里面不包括8，范围 0-7.\n</code></pre>\n\n<h3 id=\"4-3-注释\"><a href=\"#4-3-注释\" class=\"headerlink\" title=\"4.3.注释\"></a>4.3.注释</h3><p>常规注释有&#x2F;&#x2F;和&#x2F;**&#x2F;两种；</p>\n<p>常用&#x2F;&#x2F;来注释；</p>\n<h2 id=\"5-循环语句\"><a href=\"#5-循环语句\" class=\"headerlink\" title=\"5.循环语句\"></a>5.循环语句</h2><p>###if   语句</p>\n<p>格式：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">if(整形表达式)\n&#123;\n    语句项\n&#125;\nelse\n&#123;\n    \n&#125;\n</code></pre>\n\n\n\n<p>####<strong>else的一个注意事项</strong></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main ()&#123;\n    int a &#x3D; 0;\n    if(a &#x3D;&#x3D; 1)&#x2F;&#x2F;结果为假，不输出语句，直接就return 0了\n    \tif(a &#x3D;&#x3D; 0)\n        \tprintf(&quot;haha\\n&quot;);\n    else&#x2F;&#x2F;else跟最近的if语句对应\n        printf(&quot;baba\\n&quot;);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n&#x2F;&#x2F;结果是没有输出\n</code></pre>\n\n<p>####<strong>return是结束函数的标志</strong></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint text()&#123;\n    if(1)&#x2F;&#x2F;函数为真，输出0，函数结束\n        return 0;\n    else\n        printf(&quot;haha&quot;);\n        return 1;\n&#125;\nint main()&#123;\n    text();\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n\n</code></pre>\n\n<p>####<strong>if语句的一种小技巧</strong></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n&#123;\n    int num &#x3D; 3;\n    if(num &#x3D;&#x3D; 5)&#x2F;&#x2F;num被赋值5了，而不是判断num是否是5， 正确写法是num&#x3D;&#x3D;5\n    &#123;\n        printf(&quot;true&quot;);\n\n    &#125;\n    else\n        printf(&quot;false&quot;);\n        return 0;\n&#125;\n&#x2F;&#x2F;其实可以写成（5&#x3D;&#x3D;num）来避免错误，5&#x3D;num编译不了，逼你改成5&#x3D;&#x3D;num\n</code></pre>\n\n<p>###switch   语句</p>\n<p><strong>语法：</strong></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">switch(整形表达式)\n&#123;\n    case 常量:\n        表达式语句;\n        break;&#x2F;&#x2F;暂停语句，跳出循环\n    default &#x2F;&#x2F;其他没有选项，输出\n       \t表达式语句;\n        break;\n&#125;\n</code></pre>\n\n<p>简单输出星期几</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n&#123;\n    int num;\n    scanf(&quot;%d&quot;,&amp;num);\n    switch(num)\n    &#123;\n        case 1:\n            printf(&quot;星期1&quot;);\n            break;\n        case 2:\n            printf(&quot;星期2&quot;);\n            break;\n        case 3:\n            printf(&quot;星期3&quot;);\n            break;\n        case 4:\n            printf(&quot;星期4&quot;);\n            break;\n        case 5:\n            printf(&quot;星期5&quot;);\n            break;\n            return  0;\n    &#125;\n&#125;\n</code></pre>\n\n<p>例题</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n&#123;\n    int n &#x3D; 1;\n    int m &#x3D; 2;\n    switch(n)\n    &#123;\n        case 1: n++;\n        case 2: m++;\n        case 3:\n            switch(n)\n            &#123;\n                case 1:n++;&#x2F;&#x2F;n&#x3D;2 case 1不执行\n                case 2:m++;n++;\n                break;\n            &#125;\n         case 4:m++;\n         break;\n         default:\n         break;\n    &#125;\n    printf(&quot;%d %d&quot;,m,n);\n    return 0;\n&#125;\n&#x2F;&#x2F;输出结果是 5 3\n</code></pre>\n\n<h3 id=\"while-语句\"><a href=\"#while-语句\" class=\"headerlink\" title=\"while 语句\"></a>while 语句</h3><p><strong>语法</strong></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">while(表达式)&#123;\n    break&#x2F;&#x2F;可用于跳出循环\n    continue&#x2F;&#x2F;是跳出本次循环\n&#125;\n</code></pre>\n\n<p><strong>break 例题</strong></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\nint main()&#123;\n    int i&#x3D;1;\n    while(i &lt;&#x3D; 10)\n    &#123;\t&#x2F;&#x2F;break在while中用与永久跳出循环\n        if(5 &#x3D;&#x3D; i）\n            break;\n        printf(&quot;%d&quot;,i);\n        i++;\n    &#125;\n    return 0;\n&#125;\n结果是1234\n        \n</code></pre>\n\n<p><strong>continu例题</strong></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\nint main()&#123;\n    int i&#x3D;1;\n    while(i &lt;&#x3D; 10)\n    &#123;\t&#x2F;&#x2F;continue在while中用于跳出本次循环，直接去判断部分（即本次循环continue下的语句不执行）\n        if(5 &#x3D;&#x3D; i）\n            continue;\n        printf(&quot;%d&quot;,i);\n        i++;\n    &#125;\n    return 0;\n&#125;   \n结果是死循环\n</code></pre>\n\n<h3 id=\"for-循环语句\"><a href=\"#for-循环语句\" class=\"headerlink\" title=\"for 循环语句\"></a>for 循环语句</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意事项：</p>\n<ol>\n<li><p>不可在循环体内修改循环变量，防止for循环失去控制。</p>\n</li>\n<li><p>建议for语句循环控制变量的取值采用“前闭后开区间(i&#x3D;0;i&lt;10;i++)”写法.</p>\n</li>\n<li><p>语句部分不建议省略，容易造成死循环或不必要的错误（；；）。</p>\n</li>\n</ol></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int main()\n&#123;\n    int a &#x3D; 0,b &#x3D; 0;\n    for(a &lt; 10; a++)\n    &#123;\n        for(b &lt; 3; b++)\n        &#x2F;&#x2F;因为没有赋0值，局部变量没有被改变，b&#x3D;3没有被清\n        &#123;\n            printf(&quot;haha&quot;);\n        &#125;\n    &#125;\n    return 0;\n&#125;\n答案是输出三个haha\n</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int main()\n&#123;\n    int i &#x3D; 0,k &#x3D; 0;\n    for(i&#x3D;0,k&#x3D;0;k&#x3D;0;k++,i++)\n    &#123;\n        k++;\n    &#125;\n&#125;\n无结果，因为一次循环都没有\n</code></pre>\n\n\n\n<h2 id=\"6-函数\"><a href=\"#6-函数\" class=\"headerlink\" title=\"6.函数\"></a>6.函数</h2><p>####getchar函数：<a href=\"https://www.runoob.com/cprogramming/c-function-getchar.html\">点击查看</a></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>getchar函数会获取<strong>\\n</strong>;</p></blockquote>\n<p>####putchar函数：<a href=\"https://www.runoob.com/cprogramming/c-function-putchar.html\">点击查看</a></p>\n<p>###6.1  利用函数实现加法算数</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n\nint main()&#123;\n  int  x1,y1,sum;\n  scanf(&quot;%d %d&quot;,&amp;x1,&amp;y1);\n  int add(int x,int y);&#x2F;&#x2F;被调函数使用时必须要先声明（被调函数在主函数前则不需要）\n  sum &#x3D; add(x1,y1);\n  printf(&quot;%d&quot;,sum);\n  system(&quot;pause&quot;);\n  return 0;\n&#125;\nint add(int x,int y)&#123;\n  int z;\n  z&#x3D;x+y;\n  return z;\n&#125;\n</code></pre>\n\n<h3 id=\"6-2-利用函数比较数字大小\"><a href=\"#6-2-利用函数比较数字大小\" class=\"headerlink\" title=\"6.2 利用函数比较数字大小\"></a>6.2 利用函数比较数字大小</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint max(int x,int y)&#123;&#x2F;&#x2F;这里不可以写成int x，y，会报错。\n    if(x&gt;y)\n        return x;\n    else\n        return y;\n&#125;\nint main()&#123;\n    int x,y;\n    scanf(&quot;%d %d&quot;,&amp;x,&amp;y);\n    int m &#x3D; max(x,y);\n    printf(&quot;%d&quot;,m);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n</code></pre>\n\n\n\n<h2 id=\"7-数组\"><a href=\"#7-数组\" class=\"headerlink\" title=\"7.数组\"></a>7.数组</h2><p>数组是一组相同类型的元素集合。<br>数组是用下标来访问的，初始下标是0。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int main()&#123;\n  int arr[4]&#123;1,2,3,4&#125;;\n  int i &#x3D; 0;\n  while(i&lt;4)&#123;\n    printf(&quot;%d&quot;,arr[i]);\n    i++;\n  &#125;\n  system(&quot;pause&quot;);\n  return 0;\n&#125;\n</code></pre>\n\n<h2 id=\"8-操作符\"><a href=\"#8-操作符\" class=\"headerlink\" title=\"8.操作符\"></a>8.操作符</h2><h3 id=\"8-1-算数操作符\"><a href=\"#8-1-算数操作符\" class=\"headerlink\" title=\"8.1 算数操作符\"></a>8.1 算数操作符</h3><p>+、-、*、&#x2F;、%(加、减、乘、除、求余)；</p>\n<h3 id=\"8-2-移位操作符\"><a href=\"#8-2-移位操作符\" class=\"headerlink\" title=\"8.2 移位操作符\"></a>8.2 移位操作符</h3><p>左移操作符：&lt;&lt;<br>右移操作符：&gt;&gt;</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main()&#123;\n  int a &#x3D; 2;\n  int b &#x3D;a &lt;&lt; 1;&#x2F;&#x2F;a左移一位\n  printf(&quot;%d\\n&quot;,b);\n  system(&quot;pause&quot;);\n  return 0;\n&#125;\n\\\\答案是4\n因为c语言是二进制计算的\n左移前：2^1&#x3D;2;\n左移后：2^\n</code></pre>\n\n<p><img src=\"/c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.assets/1649585085748.png\" alt=\"1649585085748\"></p>\n<h3 id=\"8-3-单目操作符\"><a href=\"#8-3-单目操作符\" class=\"headerlink\" title=\"8.3 单目操作符\"></a>8.3 单目操作符</h3><p><img src=\"/c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.assets/1649679323342.png\" alt=\"1649679323342\">  </p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main()&#123;\n    int a&#x3D;10,b&#x3D;0;\n    b&#x3D;a++;&#x2F;&#x2F;后置++；先赋值给b，b再自增；\n    printf(&quot;%d,&quot;,b);\n    printf(&quot;%d&quot;,a);\n    printf(&quot;\\n&quot;);\n    int c&#x3D;10,d&#x3D;0;\n    d&#x3D;++c;&#x2F;&#x2F;前置++，先自增，再赋值；\n    printf(&quot;%d,&quot;,d);\n    printf(&quot;%d&quot;,c);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n输出结果是\n    10，11\n    11，11\n</code></pre>\n\n<h3 id=\"8-4关系操作符，逻辑操作符\"><a href=\"#8-4关系操作符，逻辑操作符\" class=\"headerlink\" title=\"8.4关系操作符，逻辑操作符\"></a>8.4关系操作符，逻辑操作符</h3><p><img src=\"/c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.assets/1649679381231.png\" alt=\"1649679381231\"></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"></code></pre>\n\n<h3 id=\"8-5条件表达式\"><a href=\"#8-5条件表达式\" class=\"headerlink\" title=\"8.5条件表达式\"></a>8.5条件表达式</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">a ? b ：c\n</code></pre>\n\n<p>a的表达式为真，则运行b的表达式；</p>\n<p>a的表达式为假，则运行c的表达式；</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main()&#123;\n    int a&#x3D;0,b&#x3D;3,max&#x3D;0;\n    if(a&gt;b)&#123;\n        max&#x3D;a;\n    &#125;\n    else&#123;\n        max&#x3D;b;\n    &#125;\n    &#x2F;&#x2F;三目表达式为\n    &#x2F;&#x2F; max &#x3D; a &gt; b ? a : b;\n    printf(&quot;%d&quot;,max);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n答案是：3\n</code></pre>\n\n<p>###8.6 逗号表达式</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">表达式，表达式，表达式\n</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main()&#123;\n    int a&#x3D;3,b&#x3D;4,c&#x3D;5;\n    &#x2F;&#x2F;     c&#x3D;5   b&#x3D;8    c&#x3D;10\n    &#x2F;&#x2F;    c&#x3D;3+2&#x3D;5 b&#x3D;5+3&#x3D;8  c&#x3D;8+2&#x3D;10\n    int d&#x3D;(c&#x3D;a+2,b&#x3D;c+3,c&#x3D;b+2);\n    &#x2F;&#x2F;从左开始计算，取最右边的值\n    printf(&quot;%d&quot;,d);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n</code></pre>\n\n<h2 id=\"9-关键字\"><a href=\"#9-关键字\" class=\"headerlink\" title=\"9.关键字\"></a>9.关键字</h2><table>\n<thead>\n<tr>\n<th align=\"center\">关键字</th>\n<th align=\"center\">解析</th>\n<th align=\"center\">&#x3D;&#x3D;</th>\n<th align=\"center\">关键字</th>\n<th align=\"center\">解析</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">auto</td>\n<td align=\"center\">声明自动变量</td>\n<td align=\"center\"></td>\n<td align=\"center\">short</td>\n<td align=\"center\">声明短型整形变量或函数</td>\n</tr>\n<tr>\n<td align=\"center\">int</td>\n<td align=\"center\">声明整型变量或函数</td>\n<td align=\"center\"></td>\n<td align=\"center\">long</td>\n<td align=\"center\">声明长型整形变量或函数</td>\n</tr>\n<tr>\n<td align=\"center\">float</td>\n<td align=\"center\">声明单精度浮点型变量或函数</td>\n<td align=\"center\"></td>\n<td align=\"center\">double</td>\n<td align=\"center\">声明双精度浮点型变量或函数</td>\n</tr>\n<tr>\n<td align=\"center\">char</td>\n<td align=\"center\">声明字符型变量或函数</td>\n<td align=\"center\"></td>\n<td align=\"center\">struct</td>\n<td align=\"center\">声明结构体变量或函数</td>\n</tr>\n<tr>\n<td align=\"center\">union</td>\n<td align=\"center\">申明共用数据类型</td>\n<td align=\"center\"></td>\n<td align=\"center\">emun</td>\n<td align=\"center\">声明枚举类型</td>\n</tr>\n<tr>\n<td align=\"center\">typedef</td>\n<td align=\"center\">用以给数据类型取别名</td>\n<td align=\"center\"></td>\n<td align=\"center\">const</td>\n<td align=\"center\">声明只读变量</td>\n</tr>\n<tr>\n<td align=\"center\">unsigned</td>\n<td align=\"center\">声明无符号类型变量或函数</td>\n<td align=\"center\"></td>\n<td align=\"center\">signed</td>\n<td align=\"center\">声明有符号类型</td>\n</tr>\n<tr>\n<td align=\"center\">extern</td>\n<td align=\"center\">变量在其他文件中时用于声明</td>\n<td align=\"center\"></td>\n<td align=\"center\">register</td>\n<td align=\"center\">声明寄存器变量</td>\n</tr>\n<tr>\n<td align=\"center\">static</td>\n<td align=\"center\">声明静态变量</td>\n<td align=\"center\"></td>\n<td align=\"center\">volatile</td>\n<td align=\"center\">说明变量在程序执行中可被隐含地改变</td>\n</tr>\n<tr>\n<td align=\"center\">void</td>\n<td align=\"center\">声明函数无返回值或无参数，声明无类型指针</td>\n<td align=\"center\"></td>\n<td align=\"center\">if</td>\n<td align=\"center\">条件语句</td>\n</tr>\n<tr>\n<td align=\"center\">else</td>\n<td align=\"center\">条件语句的否定语句</td>\n<td align=\"center\"></td>\n<td align=\"center\">switch</td>\n<td align=\"center\">用于开关语句</td>\n</tr>\n<tr>\n<td align=\"center\">case</td>\n<td align=\"center\">开关语句的分支语句</td>\n<td align=\"center\"></td>\n<td align=\"center\">for</td>\n<td align=\"center\">循环语句</td>\n</tr>\n<tr>\n<td align=\"center\">do</td>\n<td align=\"center\">循环语句的循环体</td>\n<td align=\"center\"></td>\n<td align=\"center\">while</td>\n<td align=\"center\">循环语句的循环条件</td>\n</tr>\n<tr>\n<td align=\"center\">goto</td>\n<td align=\"center\">无条件跳出语句</td>\n<td align=\"center\"></td>\n<td align=\"center\">continue</td>\n<td align=\"center\">结束当前循环，开始下一轮循环</td>\n</tr>\n<tr>\n<td align=\"center\">break</td>\n<td align=\"center\">跳出当前循环</td>\n<td align=\"center\"></td>\n<td align=\"center\">default</td>\n<td align=\"center\">开关语句的“其他”分支</td>\n</tr>\n<tr>\n<td align=\"center\">sizeof</td>\n<td align=\"center\">计算数据类型长度</td>\n<td align=\"center\"></td>\n<td align=\"center\">return</td>\n<td align=\"center\">子程序返回语句（可以带参数，也可不带）循环条件</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>例子：</p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nvoid text()&#123;\n    int a&#x3D;1;\n    a++;\n    printf(&quot;%d+&quot;,a);\n&#125;\nint main()&#123;\n    int i &#x3D; 0;\n    while(i&lt;10)&#123;\n        i++;\n        text();\n    &#125;\n    return 0;\n&#125;&#x2F;&#x2F;结果是十个2；\n</code></pre>\n\n<p>###9.1 static修饰的静态</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>例子 1</strong></p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nvoid text()&#123;\n    static int a&#x3D;1;&#x2F;&#x2F;保持原来的a不重置\n    a++;\n    printf(&quot;%d &quot;,a);\n&#125;\nint main()&#123;\n    int i &#x3D; 0;\n    while(i&lt;10)&#123;\n        i++;\n        text();\n    &#125;\n    return 0;\n&#125;&#x2F;&#x2F;结果是2 3 4 5 6 7 8 9 10 11\n</code></pre>\n\n<p><strong>例子 2</strong></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint sum(int a)&#123;\n    int c &#x3D; 0;\n    static int b &#x3D; 3;&#x2F;&#x2F;b第二次后就不会被初始化\n    c +&#x3D; 1;\n    b +&#x3D; 2;\n    return(a + b + c);\n&#125;\nint main()&#123;\n   int i;\n   int a &#x3D; 2;\n   for(i &#x3D; 0; i &lt; 5; i++ )&#123;\n       printf(&quot;%d, &quot;,sum(a));\n       &#125;\n       return 0;\n&#125;&#x2F;&#x2F;输出结果是 8 10 12 14 16\n</code></pre>\n\n\n\n<p>###<strong>9.2 extant：全局变量</strong></p>\n<p><img src=\"/c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.assets/1649679594913.png\" alt=\"1649679594913\"></p>\n<p>###<strong>9.3 define定义宏</strong></p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#define add(x,y) x+y&#x2F;&#x2F;定义的宏\nint main()&#123;\n    printf(&quot;%d\\n&quot;,add(2,3));\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n</code></pre>\n\n<h2 id=\"10-指针\"><a href=\"#10-指针\" class=\"headerlink\" title=\"10.指针\"></a>10.指针</h2><p>​\t内存是电脑上特别重要的存储器，计算机中所有的程序运行都是再内存中运行的。为了有效使用内存，就把内存划分成一个个小的内存单元，每个内存单元的大小是<strong>1个字节（byte）</strong>。</p>\n<p>​\t为了有效访问到内存的每个单元，就给他们编号，这些编号就是<strong>内存单元的地址</strong>。<br>![](c语言学习笔记.assets&#x2F;批注 2022-03-30 154124.png)</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int main()&#123;\n    int a &#x3D; 10;&#x2F;&#x2F;a再内存中要分配空间的  int 4个字节\n    printf(&quot;%p&quot;,&amp;a);&#x2F;&#x2F;%p是专门打印指针变量的\n    int* pa &#x3D; &amp;a;\n    &#x2F;&#x2F;*说明pa是指针变量\n    &#x2F;&#x2F;int 说明pa执行的对象是int型\n    return 0;\n&#125;\n</code></pre>\n\n<h3 id=\"10-1解引用操作符\"><a href=\"#10-1解引用操作符\" class=\"headerlink\" title=\"10.1解引用操作符\"></a>10.1解引用操作符</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int main()&#123;\n    int a &#x3D; 10;\n    int* pa &#x3D; &amp;a;&#x2F;&#x2F;存放a的地址到pa中\n    *pa &#x3D; 20;&#x2F;&#x2F;*是解引用操作  *pa就是通过pa的地址找到a，然后修改a\n    printf(&quot;%d\\n&quot;,a);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n输出答案是：20\n</code></pre>\n\n<h3 id=\"10-2指针变量的大小\"><a href=\"#10-2指针变量的大小\" class=\"headerlink\" title=\"10.2指针变量的大小\"></a>10.2指针变量的大小</h3><p>指针大小：</p>\n<p>32位的平台是<strong>4</strong>个字节</p>\n<p>64位的平台是<strong>8</strong>个字节</p>\n<h3 id=\"10-3-结构体\"><a href=\"#10-3-结构体\" class=\"headerlink\" title=\"10.3 结构体\"></a>10.3 结构体</h3><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nstruct stu&#123;&#x2F;&#x2F;结构体的创建和初始化\n    char name[20];&#x2F;&#x2F;结构体变量，成员变量\n    int age;\n    int score;\n&#125;;\nint main()&#123;\n    struct stu s &#x3D; &#123;&quot;张三&quot;,20,100&#125;;\n    printf(&quot;1. %s %d %d\\n&quot;,s.name,s.age,s.score);\n    struct stu * pg &#x3D; &amp;s;&#x2F;&#x2F;创建一个指针取s的地址\n    printf(&quot;2. %s %d %d\\n&quot;,(*pg).name,(*pg).age,(*pg).score);&#x2F;&#x2F;*pg的地址等同于s\n    printf(&quot;3. %s %d %d&quot;,pg-&gt;name,pg-&gt;age,pg-&gt;score);&#x2F;&#x2F;（*pg）.name等同于pg-&gt;name;\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n</code></pre>\n\n","text":"C 语言1.数据类型char ：字符数据类型 short ：短整形 int ：整形 long ：长整形 long long ：更长的整形 float ：单精度浮点形 double ：双精度浮点型 1.1格式输出 ％d整型输出，％ld长整型输出， ％o以八进制数形式输出整数， ％x...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"c语言","slug":"c语言","count":1,"path":"api/tags/c语言.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#C-%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">C 语言</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">1.数据类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1%E6%A0%BC%E5%BC%8F%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">1.1格式输出</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E5%92%8C%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2. 局部变量和全局变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89%EF%BC%9A\"><span class=\"toc-text\">2.1 变量定义：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E5%8F%98%E9%87%8F%E7%9A%84%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">2.2 变量的运算</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">3.常量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E5%AD%97%E9%9D%A2%E5%B8%B8%E9%87%8F%EF%BC%9A1-2-3-a-b-c-%E2%80%99a%E2%80%99\"><span class=\"toc-text\">3.1. 字面常量：1,2,3,a,b,c,’a’</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-const%E4%BF%AE%E9%A5%B0%E7%9A%84%E5%B8%B8%E5%8F%98%E9%87%8F%EF%BC%88%E5%8F%98%E9%87%8F%E5%85%B7%E6%9C%89%E5%B8%B8%E9%87%8F%E5%B1%9E%E6%80%A7%EF%BC%89\"><span class=\"toc-text\">3.2. const修饰的常变量（变量具有常量属性）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-define%E5%AE%9A%E4%B9%89%E7%9A%84%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">3.3. define定义的常量</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6%E5%92%8C%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">4.字符串和转义字符和注释</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%9A%E5%8F%8C%E5%BC%95%E5%8F%B7%E6%8B%AC%E8%B5%B7%E6%9D%A5%E7%9A%84%E4%B8%80%E4%B8%B2%E5%AD%97%E7%AC%A6%E3%80%82\"><span class=\"toc-text\">4.1.字符串：双引号括起来的一串字符。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">4.2.转义字符列表</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-3-%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">4.3.注释</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">5.循环语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#while-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">while 语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#for-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">for 循环语句</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">6.函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-2-%E5%88%A9%E7%94%A8%E5%87%BD%E6%95%B0%E6%AF%94%E8%BE%83%E6%95%B0%E5%AD%97%E5%A4%A7%E5%B0%8F\"><span class=\"toc-text\">6.2 利用函数比较数字大小</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#7-%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">7.数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#8-%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">8.操作符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-1-%E7%AE%97%E6%95%B0%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">8.1 算数操作符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-2-%E7%A7%BB%E4%BD%8D%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">8.2 移位操作符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-3-%E5%8D%95%E7%9B%AE%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">8.3 单目操作符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-4%E5%85%B3%E7%B3%BB%E6%93%8D%E4%BD%9C%E7%AC%A6%EF%BC%8C%E9%80%BB%E8%BE%91%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">8.4关系操作符，逻辑操作符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-5%E6%9D%A1%E4%BB%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">8.5条件表达式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#9-%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">9.关键字</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#10-%E6%8C%87%E9%92%88\"><span class=\"toc-text\">10.指针</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-1%E8%A7%A3%E5%BC%95%E7%94%A8%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">10.1解引用操作符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-2%E6%8C%87%E9%92%88%E5%8F%98%E9%87%8F%E7%9A%84%E5%A4%A7%E5%B0%8F\"><span class=\"toc-text\">10.2指针变量的大小</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-3-%E7%BB%93%E6%9E%84%E4%BD%93\"><span class=\"toc-text\">10.3 结构体</span></a></li></ol></li></ol></li></ol>","author":{"name":"ByteOcean","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/04/14/L1GjII.jpg","link":"/","description":"一位正在学习知识的菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"c++和qt的学习笔记","uid":"aff30a953cc96d6ea750307d12a686f5","slug":"c-和qt的学习笔记","date":"2022-04-14T13:12:38.000Z","updated":"2022-04-14T13:54:46.815Z","comments":true,"path":"api/articles/c-和qt的学习笔记.json","keywords":null,"cover":"https://s1.ax1x.com/2022/04/14/L1qR3j.jpg","text":"C++ \\ QT一. 初识c++1.1 我的第一个c++程序#include &lt;iostream&gt; using namespace std; int main()&#123; int a; cout&lt;&lt;&quot;Do you love me?\\n&quo...","link":"","photos":[],"count_time":{"symbolsCount":823,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"c++","slug":"c","count":1,"path":"api/tags/c.json"}],"author":{"name":"ByteOcean","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/04/14/L1GjII.jpg","link":"/","description":"一位正在学习知识的菜鸟","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}