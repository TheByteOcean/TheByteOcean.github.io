[{"id":"c1aeadca2647fee9c353fa4b277a230d","title":"淦","content":"又是干代码的一天，淦\n###pop愤怒\n","slug":"3","date":"2022-04-14T13:21:04.000Z","categories_index":"","tags_index":"","author_index":"ByteOcean"},{"id":"c1aeadca2647fee9c353fa4b277a230d","title":"淦","content":"又是干代码的一天，淦\n###pop愤怒\n","slug":"2","date":"2022-04-14T13:20:37.000Z","categories_index":"","tags_index":"","author_index":"ByteOcean"},{"id":"c1aeadca2647fee9c353fa4b277a230d","title":"淦","content":"又是干代码的一天，淦\n###pop愤怒\n","slug":"ByteOcean-1","date":"2022-04-14T12:54:21.000Z","categories_index":"","tags_index":"","author_index":"ByteOcean"},{"id":"478dde2fa6c41264280fad4fc339d6c8","title":"java学习笔记","content":"\n\n\n\n\n\n提示\n啊这，暂时还不怎么会呢！\n\n","slug":"java","date":"2022-04-14T13:35:37.000Z","categories_index":"","tags_index":"Java","author_index":"ByteOcean"},{"id":"aff30a953cc96d6ea750307d12a686f5","title":"c++和qt的学习笔记","content":"C++ \\ QT一. 初识c++1.1 我的第一个c++程序#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()&#123;\n    int a;\n    cout&lt;&lt;&quot;Do you love me?\\n&quot;;\n    cin&gt;&gt;a;\n    cout&lt;&lt;&quot;hello c++,hello qt,this is my first project&quot;;\n    return 0;\n&#125;\n&#x2F;&#x2F;这是我的第一个c++程序\n\n1.2 注释​\t单行注释：用   &#x2F;&#x2F;\n​\t多行注释：用  &#x2F;**&#x2F;\n#include&lt;iostream&gt;\n\nusing namespace std;\n\nint main()&#123;\n    cout&lt;&lt;&quot;hello c++&quot;&lt;&lt;endl;&#x2F;&#x2F;单行注释\n    return 0;\n    &#x2F;*cout&gt;&gt;&quot;hello c++&quot;\n    return 0;多行注释*&#x2F;\n&#125;\n\n1.3 变量意义：方便我们管理内存空间\n语法：  数据类型  变量名   &#x3D;  初始值；\n实例：\n#include&lt;iostream&gt;\nint main()&#123;\n    \n    int a&#x3D;5;&#x2F;&#x2F;声明一个整形变量 a\n    cout&gt;&gt;&quot;a&#x3D;&quot;&gt;&gt;a&gt;&gt;endl;\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n\n","slug":"c-和qt的学习笔记","date":"2022-04-14T13:12:38.000Z","categories_index":"","tags_index":"c++","author_index":"ByteOcean"},{"id":"bdd0eaab0e705abcb82a7da5e660d5c1","title":"c语言学习笔记","content":"C 语言1.数据类型char ：字符数据类型\n\nshort ：短整形\n\nint ：整形\n\nlong ：长整形\n\nlong long ：更长的整形\n\nfloat ：单精度浮点形\n\ndouble ：双精度浮点型\n\n\n\n1.1格式输出\n\n\n\n\n\n\n\n\n％d整型输出，％ld长整型输出，\n\n\n\n\n\n\n\n\n\n ％o以八进制数形式输出整数，\n\n\n\n\n\n\n\n\n\n ％x以十六进制数形式输出整数，\n\n\n\n\n\n\n\n\n\n％u以十进制数输出unsigned型数据(无符号数)。\n\n\n\n\n\n\n\n\n\n ％c用来输出一个字符，\n\n\n\n\n\n\n\n\n\n ％s用来输出一个字符串，\n\n\n\n\n\n\n\n\n\n ％f用来输出实数，以小数形式输出，（备注：浮点数是不能定义如的精度的，所以“%6.2f”这种写法是“错误的”！！！）\n\n\n\n\n\n\n\n\n\n  ％e以指数形式输出实数，\n\n\n\n\n\n\n\n\n\n  ％g根据大小自动选f格式或e格式，且不输出无意义的零\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n&#123;\n    char ch &#x3D; &#39;A&#39;;\n\tshort num &#x3D; 10;&#x2F;&#x2F;short int的缩写\n\tint age &#x3D; 5;\n\tlong d &#x3D; 1000;&#x2F;&#x2F;long int的缩写\n\tfloat weight &#x3D; 3.14;\n\tdouble f &#x3D; 3.1415926;\n\tprintf(&quot;%c,%d,%d,%d,%f,%f&quot;,ch,num,age,d,weight,f);\n\tsystem(&quot;pause&quot;);&#x2F;&#x2F;控制台停留\n\treturn 0;\n&#125;\n\n输出结果：A，10，5，1000，3.14，3.1415926\n\n2. 局部变量和全局变量2.1 变量定义：\n\n\n\n\n\n\n\n\n\n局部变量作用域在局部的变量工程\n全局变量作用域在整个项目工程（如引用同项目不同文件的变量需要使用：全局变量声明（extern））\n\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint a&#x3D;100;&#x2F;&#x2F;全局变量\nint main()\n&#123; \n    int a&#x3D;10;&#x2F;&#x2F;局部变量\n    printf(&quot;%d&quot;,a);\n    system(&quot;pause&quot;);&#x2F;&#x2F;控制台停留\n\treturn 0;\n&#125;\n\n结果是：10\n\n\n\n\n\n\n\n\n\n\n 当全局变量和局部变量冲突时，优先使用局部变量。\n &#x3D;&#x3D;（不建议局部和全局冲突）&#x3D;&#x3D;\n 局部变量只可以在局部使用，在&#x3D;&#x3D;局外不可以使用。&#x3D;&#x3D;\n代码例子\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n&#123; \n    \n    &#123;\n        int a&#x3D;10;&#x2F;&#x2F;局部变量\n    &#125;\n    printf(&quot;%d&quot;,a);\n    system(&quot;pause&quot;);&#x2F;&#x2F;控制台停留\n\treturn 0;\n&#125;\n\n会提示 a 未定义\n注意：执行类代码必须放在函数里面，不可以放在外面，而全局变量可以放在函数外面；\n\n2.2 变量的运算#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main()\n&#123;\n  int a&#x3D;0,b&#x3D;0;\n    int sum&#x3D;0;\n    scanf(&quot;%d %d&quot;,&amp;a,&amp;b);&#x2F;&#x2F;用VS studio时用scanf_s\n    &#x2F;&#x2F;&amp; ：取地址符, &amp;a：变量a的地址\n    sum &#x3D; a + b;\n    printf(&quot;%d and %d is %d&quot;,a,b,sum);\n    system(&quot;pause&quot;);&#x2F;&#x2F;控制台停留\n\treturn 0;\n&#125;\n\n3.常量3.1. 字面常量：1,2,3,a,b,c,’a’3.2. const修饰的常变量（变量具有常量属性）int main()&#123;\n    int a &#x3D; 10;\n    a&#x3D;20;&#x2F;&#x2F;a可以被修改为20\n    printf(&quot;%d&quot;,a)\n&#125;\n结果是 20, a被修改了\nint main()&#123;\n    const int a &#x3D; 10;\n    a&#x3D;20;&#x2F;&#x2F;const指定a为常变量了，a不可以被改了。会被报错。\n    printf(&quot;%d&quot;,a)\n&#125;\n\n\n注意：表达式中的只可以用常量，不可以用变量\nint main()\n&#123;\n    int arr[2]&#x3D;&#123;1,2&#125;;&#x2F;&#x2F;正确\n    int arr2[n]&#x3D;&#123;0&#125;;&#x2F;&#x2F;错误，因为数组不可以使用常量。\n    printf(&quot;&quot;)\n&#125;\n但是\nint main()\n&#123;\n    const int n &#x3D; 10;\n    int arr2[n]&#x3D;&#123;0&#125;;&#x2F;&#x2F;错误，n虽然被定义为常变量了。但是实质还是变量。\n    printf(&quot;&quot;)\n&#125;\n\n\n3.3. define定义的常量#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#define wife 1000&#x2F;&#x2F;定义wife&#x3D;1000\nint main()\n&#123;\n  int a &#x3D; wife;\n  printf(&quot;a &#x3D; %d&quot;,a);\n  system(&quot;pause&quot;);\n&#125;\n输出结果是1000\n\n\n###3.4 枚举常量(enum)、、不是很懂\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nenum sex&#123;\n  male,\n  female\n&#125;;\nint main()&#123;\n  int a,b;\n  a &#x3D; male;\n  b &#x3D; female;\n  printf(&quot;%d\\n%d&quot;,male,female);\n  system(&quot;pause&quot;);\n&#125;\n结果是\n  0\n  1\n\n\n4.字符串和转义字符和注释4.1.字符串：双引号括起来的一串字符。&quot;hello&quot;就是一个字符串（&quot;实际是hello\\0&quot;，\\0被隐藏了）\n\n\n   注：字符串的结束标志是一个\\0的转义字符，在计算字符串长度时，不算作字符串内容。\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt;&#x2F;&#x2F;strlen的调用\nint main()\n&#123;\n  int len &#x3D; strlen(&quot;hello&quot;);&#x2F;&#x2F;string length字符串长度\n  printf(&quot;%d&quot;,len);\n  system(&quot;pause&quot;);\n&#125;\n答案是5，\\0不会被计算在内\n\n\n4.2.转义字符列表\n代码示例\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt;&#x2F;&#x2F;strlen的调用\nint main()&#123;\n  printf(&quot;%s %s %s&quot;,&quot;\\?&quot;,&quot;\\&quot;&quot;,&quot;\\&#39;&quot;);&#x2F;&#x2F;会输出？ &quot; &#39;\n  printf(&quot;%d&quot;,strlen(&quot;c:\\test\\328\\text.c&quot;));\n &#x2F;&#x2F;strlen是计算字符长度的\n  system(&quot;pause&quot;);\n  return 0;\n&#125;\n答案是14\nc :\\t e s t \\32 8 \\t e x t . c\n共14个&#x2F;328的格式是&#x2F;ddd而不是&#x2F;xhh因为8不是8进制，8进制里面不包括8，范围 0-7.\n\n\n4.3.注释常规注释有&#x2F;&#x2F;和&#x2F;**&#x2F;两种；\n常用&#x2F;&#x2F;来注释；\n5.循环语句###if   语句\n格式：\nif(整形表达式)\n&#123;\n    语句项\n&#125;\nelse\n&#123;\n    \n&#125;\n\n\n\n\n####else的一个注意事项\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main ()&#123;\n    int a &#x3D; 0;\n    if(a &#x3D;&#x3D; 1)&#x2F;&#x2F;结果为假，不输出语句，直接就return 0了\n    \tif(a &#x3D;&#x3D; 0)\n        \tprintf(&quot;haha\\n&quot;);\n    else&#x2F;&#x2F;else跟最近的if语句对应\n        printf(&quot;baba\\n&quot;);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n&#x2F;&#x2F;结果是没有输出\n\n\n####return是结束函数的标志\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint text()&#123;\n    if(1)&#x2F;&#x2F;函数为真，输出0，函数结束\n        return 0;\n    else\n        printf(&quot;haha&quot;);\n        return 1;\n&#125;\nint main()&#123;\n    text();\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n\n\n\n####if语句的一种小技巧\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n&#123;\n    int num &#x3D; 3;\n    if(num &#x3D;&#x3D; 5)&#x2F;&#x2F;num被赋值5了，而不是判断num是否是5， 正确写法是num&#x3D;&#x3D;5\n    &#123;\n        printf(&quot;true&quot;);\n\n    &#125;\n    else\n        printf(&quot;false&quot;);\n        return 0;\n&#125;\n&#x2F;&#x2F;其实可以写成（5&#x3D;&#x3D;num）来避免错误，5&#x3D;num编译不了，逼你改成5&#x3D;&#x3D;num\n\n\n###switch   语句\n语法：\nswitch(整形表达式)\n&#123;\n    case 常量:\n        表达式语句;\n        break;&#x2F;&#x2F;暂停语句，跳出循环\n    default &#x2F;&#x2F;其他没有选项，输出\n       \t表达式语句;\n        break;\n&#125;\n\n\n简单输出星期几\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n&#123;\n    int num;\n    scanf(&quot;%d&quot;,&amp;num);\n    switch(num)\n    &#123;\n        case 1:\n            printf(&quot;星期1&quot;);\n            break;\n        case 2:\n            printf(&quot;星期2&quot;);\n            break;\n        case 3:\n            printf(&quot;星期3&quot;);\n            break;\n        case 4:\n            printf(&quot;星期4&quot;);\n            break;\n        case 5:\n            printf(&quot;星期5&quot;);\n            break;\n            return  0;\n    &#125;\n&#125;\n\n\n例题\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main()\n&#123;\n    int n &#x3D; 1;\n    int m &#x3D; 2;\n    switch(n)\n    &#123;\n        case 1: n++;\n        case 2: m++;\n        case 3:\n            switch(n)\n            &#123;\n                case 1:n++;&#x2F;&#x2F;n&#x3D;2 case 1不执行\n                case 2:m++;n++;\n                break;\n            &#125;\n         case 4:m++;\n         break;\n         default:\n         break;\n    &#125;\n    printf(&quot;%d %d&quot;,m,n);\n    return 0;\n&#125;\n&#x2F;&#x2F;输出结果是 5 3\n\n\nwhile 语句语法\nwhile(表达式)&#123;\n    break&#x2F;&#x2F;可用于跳出循环\n    continue&#x2F;&#x2F;是跳出本次循环\n&#125;\n\n\nbreak 例题\n#include &lt;stdio.h&gt;\nint main()&#123;\n    int i&#x3D;1;\n    while(i &lt;&#x3D; 10)\n    &#123;\t&#x2F;&#x2F;break在while中用与永久跳出循环\n        if(5 &#x3D;&#x3D; i）\n            break;\n        printf(&quot;%d&quot;,i);\n        i++;\n    &#125;\n    return 0;\n&#125;\n结果是1234\n        \n\n\ncontinu例题\n#include &lt;stdio.h&gt;\nint main()&#123;\n    int i&#x3D;1;\n    while(i &lt;&#x3D; 10)\n    &#123;\t&#x2F;&#x2F;continue在while中用于跳出本次循环，直接去判断部分（即本次循环continue下的语句不执行）\n        if(5 &#x3D;&#x3D; i）\n            continue;\n        printf(&quot;%d&quot;,i);\n        i++;\n    &#125;\n    return 0;\n&#125;   \n结果是死循环\n\n\nfor 循环语句\n\n\n\n\n\n\n\n\n注意事项：\n\n不可在循环体内修改循环变量，防止for循环失去控制。\n\n建议for语句循环控制变量的取值采用“前闭后开区间(i&#x3D;0;i&lt;10;i++)”写法.\n\n语句部分不建议省略，容易造成死循环或不必要的错误（；；）。\n\n\nint main()\n&#123;\n    int a &#x3D; 0,b &#x3D; 0;\n    for(a &lt; 10; a++)\n    &#123;\n        for(b &lt; 3; b++)\n        &#x2F;&#x2F;因为没有赋0值，局部变量没有被改变，b&#x3D;3没有被清\n        &#123;\n            printf(&quot;haha&quot;);\n        &#125;\n    &#125;\n    return 0;\n&#125;\n答案是输出三个haha\n\n\nint main()\n&#123;\n    int i &#x3D; 0,k &#x3D; 0;\n    for(i&#x3D;0,k&#x3D;0;k&#x3D;0;k++,i++)\n    &#123;\n        k++;\n    &#125;\n&#125;\n无结果，因为一次循环都没有\n\n\n\n\n6.函数####getchar函数：点击查看\n\n\n\n\n\n\n\n\n\ngetchar函数会获取\\n;\n####putchar函数：点击查看\n###6.1  利用函数实现加法算数\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n\nint main()&#123;\n  int  x1,y1,sum;\n  scanf(&quot;%d %d&quot;,&amp;x1,&amp;y1);\n  int add(int x,int y);&#x2F;&#x2F;被调函数使用时必须要先声明（被调函数在主函数前则不需要）\n  sum &#x3D; add(x1,y1);\n  printf(&quot;%d&quot;,sum);\n  system(&quot;pause&quot;);\n  return 0;\n&#125;\nint add(int x,int y)&#123;\n  int z;\n  z&#x3D;x+y;\n  return z;\n&#125;\n\n\n6.2 利用函数比较数字大小#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint max(int x,int y)&#123;&#x2F;&#x2F;这里不可以写成int x，y，会报错。\n    if(x&gt;y)\n        return x;\n    else\n        return y;\n&#125;\nint main()&#123;\n    int x,y;\n    scanf(&quot;%d %d&quot;,&amp;x,&amp;y);\n    int m &#x3D; max(x,y);\n    printf(&quot;%d&quot;,m);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n\n\n\n\n7.数组数组是一组相同类型的元素集合。数组是用下标来访问的，初始下标是0。\nint main()&#123;\n  int arr[4]&#123;1,2,3,4&#125;;\n  int i &#x3D; 0;\n  while(i&lt;4)&#123;\n    printf(&quot;%d&quot;,arr[i]);\n    i++;\n  &#125;\n  system(&quot;pause&quot;);\n  return 0;\n&#125;\n\n\n8.操作符8.1 算数操作符+、-、*、&#x2F;、%(加、减、乘、除、求余)；\n8.2 移位操作符左移操作符：&lt;&lt;右移操作符：&gt;&gt;\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main()&#123;\n  int a &#x3D; 2;\n  int b &#x3D;a &lt;&lt; 1;&#x2F;&#x2F;a左移一位\n  printf(&quot;%d\\n&quot;,b);\n  system(&quot;pause&quot;);\n  return 0;\n&#125;\n\\\\答案是4\n因为c语言是二进制计算的\n左移前：2^1&#x3D;2;\n左移后：2^\n\n\n\n8.3 单目操作符  \n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main()&#123;\n    int a&#x3D;10,b&#x3D;0;\n    b&#x3D;a++;&#x2F;&#x2F;后置++；先赋值给b，b再自增；\n    printf(&quot;%d,&quot;,b);\n    printf(&quot;%d&quot;,a);\n    printf(&quot;\\n&quot;);\n    int c&#x3D;10,d&#x3D;0;\n    d&#x3D;++c;&#x2F;&#x2F;前置++，先自增，再赋值；\n    printf(&quot;%d,&quot;,d);\n    printf(&quot;%d&quot;,c);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n输出结果是\n    10，11\n    11，11\n\n\n8.4关系操作符，逻辑操作符\n\n\n8.5条件表达式a ? b ：c\n\n\na的表达式为真，则运行b的表达式；\na的表达式为假，则运行c的表达式；\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main()&#123;\n    int a&#x3D;0,b&#x3D;3,max&#x3D;0;\n    if(a&gt;b)&#123;\n        max&#x3D;a;\n    &#125;\n    else&#123;\n        max&#x3D;b;\n    &#125;\n    &#x2F;&#x2F;三目表达式为\n    &#x2F;&#x2F; max &#x3D; a &gt; b ? a : b;\n    printf(&quot;%d&quot;,max);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n答案是：3\n\n\n###8.6 逗号表达式\n表达式，表达式，表达式\n\n\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint main()&#123;\n    int a&#x3D;3,b&#x3D;4,c&#x3D;5;\n    &#x2F;&#x2F;     c&#x3D;5   b&#x3D;8    c&#x3D;10\n    &#x2F;&#x2F;    c&#x3D;3+2&#x3D;5 b&#x3D;5+3&#x3D;8  c&#x3D;8+2&#x3D;10\n    int d&#x3D;(c&#x3D;a+2,b&#x3D;c+3,c&#x3D;b+2);\n    &#x2F;&#x2F;从左开始计算，取最右边的值\n    printf(&quot;%d&quot;,d);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n\n\n9.关键字\n\n\n关键字\n解析\n&#x3D;&#x3D;\n关键字\n解析\n\n\n\nauto\n声明自动变量\n\nshort\n声明短型整形变量或函数\n\n\nint\n声明整型变量或函数\n\nlong\n声明长型整形变量或函数\n\n\nfloat\n声明单精度浮点型变量或函数\n\ndouble\n声明双精度浮点型变量或函数\n\n\nchar\n声明字符型变量或函数\n\nstruct\n声明结构体变量或函数\n\n\nunion\n申明共用数据类型\n\nemun\n声明枚举类型\n\n\ntypedef\n用以给数据类型取别名\n\nconst\n声明只读变量\n\n\nunsigned\n声明无符号类型变量或函数\n\nsigned\n声明有符号类型\n\n\nextern\n变量在其他文件中时用于声明\n\nregister\n声明寄存器变量\n\n\nstatic\n声明静态变量\n\nvolatile\n说明变量在程序执行中可被隐含地改变\n\n\nvoid\n声明函数无返回值或无参数，声明无类型指针\n\nif\n条件语句\n\n\nelse\n条件语句的否定语句\n\nswitch\n用于开关语句\n\n\ncase\n开关语句的分支语句\n\nfor\n循环语句\n\n\ndo\n循环语句的循环体\n\nwhile\n循环语句的循环条件\n\n\ngoto\n无条件跳出语句\n\ncontinue\n结束当前循环，开始下一轮循环\n\n\nbreak\n跳出当前循环\n\ndefault\n开关语句的“其他”分支\n\n\nsizeof\n计算数据类型长度\n\nreturn\n子程序返回语句（可以带参数，也可不带）循环条件\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n例子：\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nvoid text()&#123;\n    int a&#x3D;1;\n    a++;\n    printf(&quot;%d+&quot;,a);\n&#125;\nint main()&#123;\n    int i &#x3D; 0;\n    while(i&lt;10)&#123;\n        i++;\n        text();\n    &#125;\n    return 0;\n&#125;&#x2F;&#x2F;结果是十个2；\n\n\n###9.1 static修饰的静态\n\n\n\n\n\n\n\n\n\n例子 1\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nvoid text()&#123;\n    static int a&#x3D;1;&#x2F;&#x2F;保持原来的a不重置\n    a++;\n    printf(&quot;%d &quot;,a);\n&#125;\nint main()&#123;\n    int i &#x3D; 0;\n    while(i&lt;10)&#123;\n        i++;\n        text();\n    &#125;\n    return 0;\n&#125;&#x2F;&#x2F;结果是2 3 4 5 6 7 8 9 10 11\n\n\n例子 2\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nint sum(int a)&#123;\n    int c &#x3D; 0;\n    static int b &#x3D; 3;&#x2F;&#x2F;b第二次后就不会被初始化\n    c +&#x3D; 1;\n    b +&#x3D; 2;\n    return(a + b + c);\n&#125;\nint main()&#123;\n   int i;\n   int a &#x3D; 2;\n   for(i &#x3D; 0; i &lt; 5; i++ )&#123;\n       printf(&quot;%d, &quot;,sum(a));\n       &#125;\n       return 0;\n&#125;&#x2F;&#x2F;输出结果是 8 10 12 14 16\n\n\n\n\n###9.2 extant：全局变量\n\n###9.3 define定义宏\n#define add(x,y) x+y&#x2F;&#x2F;定义的宏\nint main()&#123;\n    printf(&quot;%d\\n&quot;,add(2,3));\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n\n\n10.指针​\t内存是电脑上特别重要的存储器，计算机中所有的程序运行都是再内存中运行的。为了有效使用内存，就把内存划分成一个个小的内存单元，每个内存单元的大小是1个字节（byte）。\n​\t为了有效访问到内存的每个单元，就给他们编号，这些编号就是内存单元的地址。![](c语言学习笔记.assets&#x2F;批注 2022-03-30 154124.png)\nint main()&#123;\n    int a &#x3D; 10;&#x2F;&#x2F;a再内存中要分配空间的  int 4个字节\n    printf(&quot;%p&quot;,&amp;a);&#x2F;&#x2F;%p是专门打印指针变量的\n    int* pa &#x3D; &amp;a;\n    &#x2F;&#x2F;*说明pa是指针变量\n    &#x2F;&#x2F;int 说明pa执行的对象是int型\n    return 0;\n&#125;\n\n\n10.1解引用操作符int main()&#123;\n    int a &#x3D; 10;\n    int* pa &#x3D; &amp;a;&#x2F;&#x2F;存放a的地址到pa中\n    *pa &#x3D; 20;&#x2F;&#x2F;*是解引用操作  *pa就是通过pa的地址找到a，然后修改a\n    printf(&quot;%d\\n&quot;,a);\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n输出答案是：20\n\n\n10.2指针变量的大小指针大小：\n32位的平台是4个字节\n64位的平台是8个字节\n10.3 结构体#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nstruct stu&#123;&#x2F;&#x2F;结构体的创建和初始化\n    char name[20];&#x2F;&#x2F;结构体变量，成员变量\n    int age;\n    int score;\n&#125;;\nint main()&#123;\n    struct stu s &#x3D; &#123;&quot;张三&quot;,20,100&#125;;\n    printf(&quot;1. %s %d %d\\n&quot;,s.name,s.age,s.score);\n    struct stu * pg &#x3D; &amp;s;&#x2F;&#x2F;创建一个指针取s的地址\n    printf(&quot;2. %s %d %d\\n&quot;,(*pg).name,(*pg).age,(*pg).score);&#x2F;&#x2F;*pg的地址等同于s\n    printf(&quot;3. %s %d %d&quot;,pg-&gt;name,pg-&gt;age,pg-&gt;score);&#x2F;&#x2F;（*pg）.name等同于pg-&gt;name;\n    system(&quot;pause&quot;);\n    return 0;\n&#125;\n\n\n","slug":"c语言学习笔记","date":"2022-04-14T13:11:40.000Z","categories_index":"","tags_index":"c语言","author_index":"ByteOcean"}]